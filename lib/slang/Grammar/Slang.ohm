Slang {
  // A Program is the root of our grammar.
  Program = ListOf<Stmt, #br>

  Stmt = Assignment
    | Expr
  
  Defun
    = Arglist "=>" Expr
   
  Assignment = (ListIndex | ident) "=" Expr

  Expr
    = Defun
    | AddExp
    

  AddExp
    = AddExp "+" MulExp  -- plus
    | AddExp "-" MulExp  -- minus
    | MulExp

  MulExp
    = MulExp "*" ExpExp  -- times
    | MulExp "/" ExpExp  -- divide
    | ExpExp

  ExpExp
    = PriExp "^" ExpExp  -- power
    | PriExp

  PriExp
    = "(" Expr ")"  -- paren
    | "+" PriExp   -- pos
    | "-" PriExp   -- neg
    | Funcall
    | StrLit
    | ArrayLiteral
    | ListIndex
    | ident
    | number

  Funcall
    = (Funcall | ident) Arglist
  
  Arglist
    = "(" ListOf<Expr, ","> ")"

  ArrayLiteral
    = "[" ListOf<(Expr | Dots), ","> "]"

  Dots
    = "..." (ident | Funcall)
  
  ListIndex
    = (ident | Funcall) "[" Expr "]"

  StrLit
    = "'" (~"'" any)+ "'"

  ident  (an identifier)
    = letter alnum*

  number  (a number)
    = digit* "." digit+  -- fract
    | digit+             -- whole

  br
    = "\n"
    | ";"
    | "\r"
}