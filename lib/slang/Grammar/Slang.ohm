Slang {
  // A Program is the root of our grammar.
  Program = Stmt+

  Stmt = Assignment
      | Expr
      //  | Funcall
   
  Assignment = ident "=" Expr

  Expr
    = AddExp

  Funcall = ident Arglist
  
  Arglist = "(" (Expr ",")* Expr? ")"

  AddExp
    = AddExp "+" MulExp  -- plus
    | AddExp "-" MulExp  -- minus
    | MulExp

  MulExp
    = MulExp "*" ExpExp  -- times
    | MulExp "/" ExpExp  -- divide
    | ExpExp

  ExpExp
    = PriExp "^" ExpExp  -- power
    | PriExp

  PriExp
    = "(" Expr ")"  -- paren
    | "+" PriExp   -- pos
    | "-" PriExp   -- neg
    | Funcall
    | ident
    | number

  ident  (an identifier)
    = letter alnum*

  number  (a number)
    = digit* "." digit+  -- fract
    | digit+             -- whole
}